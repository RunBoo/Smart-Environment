// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `EnviroSmart.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.query.ice.info;

public class CityInformation implements java.lang.Cloneable, java.io.Serializable
{
    public String name;

    public String location;

    public String information;

    public String services;

    public CityInformation()
    {
        name = "";
        location = "";
        information = "";
        services = "";
    }

    public CityInformation(String name, String location, String information, String services)
    {
        this.name = name;
        this.location = location;
        this.information = information;
        this.services = services;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        CityInformation _r = null;
        if(rhs instanceof CityInformation)
        {
            _r = (CityInformation)rhs;
        }

        if(_r != null)
        {
            if(name != _r.name)
            {
                if(name == null || _r.name == null || !name.equals(_r.name))
                {
                    return false;
                }
            }
            if(location != _r.location)
            {
                if(location == null || _r.location == null || !location.equals(_r.location))
                {
                    return false;
                }
            }
            if(information != _r.information)
            {
                if(information == null || _r.information == null || !information.equals(_r.information))
                {
                    return false;
                }
            }
            if(services != _r.services)
            {
                if(services == null || _r.services == null || !services.equals(_r.services))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::info::CityInformation");
        __h = IceInternal.HashUtil.hashAdd(__h, name);
        __h = IceInternal.HashUtil.hashAdd(__h, location);
        __h = IceInternal.HashUtil.hashAdd(__h, information);
        __h = IceInternal.HashUtil.hashAdd(__h, services);
        return __h;
    }

    public CityInformation
    clone()
    {
        CityInformation c = null;
        try
        {
            c = (CityInformation)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(name);
        __os.writeString(location);
        __os.writeString(information);
        __os.writeString(services);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        name = __is.readString();
        location = __is.readString();
        information = __is.readString();
        services = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, CityInformation __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public CityInformation
    __read(IceInternal.BasicStream __is, CityInformation __v)
    {
        if(__v == null)
        {
             __v = new CityInformation();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final CityInformation __nullMarshalValue = new CityInformation();

    public static final long serialVersionUID = -1646340042L;
}
