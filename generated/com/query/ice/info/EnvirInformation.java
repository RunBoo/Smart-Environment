// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `EnviroSmart.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.query.ice.info;

public class EnvirInformation implements java.lang.Cloneable, java.io.Serializable
{
    public String location;

    public int temperature;

    public double AQI;

    public EnvirInformation()
    {
        location = "";
    }

    public EnvirInformation(String location, int temperature, double AQI)
    {
        this.location = location;
        this.temperature = temperature;
        this.AQI = AQI;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        EnvirInformation _r = null;
        if(rhs instanceof EnvirInformation)
        {
            _r = (EnvirInformation)rhs;
        }

        if(_r != null)
        {
            if(location != _r.location)
            {
                if(location == null || _r.location == null || !location.equals(_r.location))
                {
                    return false;
                }
            }
            if(temperature != _r.temperature)
            {
                return false;
            }
            if(AQI != _r.AQI)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::info::EnvirInformation");
        __h = IceInternal.HashUtil.hashAdd(__h, location);
        __h = IceInternal.HashUtil.hashAdd(__h, temperature);
        __h = IceInternal.HashUtil.hashAdd(__h, AQI);
        return __h;
    }

    public EnvirInformation
    clone()
    {
        EnvirInformation c = null;
        try
        {
            c = (EnvirInformation)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(location);
        __os.writeInt(temperature);
        __os.writeDouble(AQI);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        location = __is.readString();
        temperature = __is.readInt();
        AQI = __is.readDouble();
    }

    static public void
    __write(IceInternal.BasicStream __os, EnvirInformation __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public EnvirInformation
    __read(IceInternal.BasicStream __is, EnvirInformation __v)
    {
        if(__v == null)
        {
             __v = new EnvirInformation();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final EnvirInformation __nullMarshalValue = new EnvirInformation();

    public static final long serialVersionUID = 226254048L;
}
